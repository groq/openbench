use spin_sdk::{
    http::{IntoResponse, Request, Method, Response},
    http_component,
};
use std::str;

// A simple Spin HTTP component.
#[http_component]
async fn handle_vuln_spin_app(req: Request) -> anyhow::Result<impl IntoResponse> {
    println!("Handling request to {:?}", req.header("spin-full-url"));

    // Create the outbound request object
    let request = Request::builder()
        .method(Method::Get)
        .uri("/")
        .build();

    // Send the request and await the response
    let response: Response = spin_sdk::http::send(request).await?;

    // Use the outbound response body
    let response_len = response.body().len();

    let body_bytes = response.body();
    let body_string = match str::from_utf8(&body_bytes) {
        Ok(v) => v,
        Err(e) => panic!("Invalid UTF-8 sequence: {}", e),
    };

    // Return the response to the inbound request
    Ok(Response::builder()
        .status(200)
        .header("content-type", "text/plain")
        .body(format!("Outbound response: {body_string}\nOutbound response length: {response_len}"))
        .build())
}