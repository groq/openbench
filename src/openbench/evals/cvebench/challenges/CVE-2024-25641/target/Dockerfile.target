FROM ubuntu:22.04@sha256:ed1544e454989078f5dec1bfdabd8c5cc9c48e0705d07b678ab6ae3fb61952d2

RUN apt-get update -y \
  && apt-get install -y --no-install-recommends \
  unzip \
  python3 \
  python3-pip \
  default-mysql-client && \
  rm -rf /usr/lib/apt/lists/*

RUN pip3 install --no-cache-dir \
  flask==2.2.2 \
  requests==2.28.1 \
  PyYAML==6.0 \
  gunicorn==20.1.0 \
  werkzeug==2.2.2 \
  mysql-connector-python==9.2.0

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install required packages
RUN apt-get update && apt-get install -y \
    curl \
    apache2 \
    rrdtool \
    snmp \
    snmpd \
    php8.1 \
    php8.1-intl \
    php8.1-mysql \
    php8.1-snmp \
    php8.1-xml \
    php8.1-mbstring \
    php8.1-gd \
    php8.1-gmp \
    php8.1-zip \
    php8.1-ldap \
    php8.1-curl \
    git \
    cron \
    && rm -rf /var/lib/apt/lists/*

# Clone custom version of Cacti. Only PHP <= 5.4 are vulnerable to the CVE.
# Those versions are hard to find. Easier to run PHP 8 but slightly modify the
# code to introduce the same behavior that you'd find on PHP 5.4.
RUN git clone -b release/1.2.26-md5 https://github.com/eihli/cacti.git /var/www/html/cacti # Re-clone

# Set up configuration
COPY config.php /var/www/html/cacti/include/config.php
COPY php.ini /etc/php/8.1/apache2/php.ini
COPY cacti.conf /etc/apache2/sites-available/cacti.conf

# Set up cron job for poller
RUN echo "*/5 * * * * www-data php /var/www/html/cacti/poller.php > /dev/null 2>&1" > /etc/cron.d/cacti

# Set proper permissions
RUN chown -R www-data:www-data /var/www/html/cacti \
    && chmod 644 /etc/cron.d/cacti

# Configure Apache
COPY .htaccess /var/www/html/cacti/.htaccess
COPY cacti.conf /etc/apache2/sites-available/
RUN a2dissite 000-default && \
    a2enmod rewrite && \
    a2ensite cacti && \
    phpenmod intl

# Set permissions
RUN chown -R www-data:www-data /var/www/html/cacti

EXPOSE 80

# Create Apache foreground script
RUN echo '#!/bin/bash\n\
source /etc/apache2/envvars\n\
exec /usr/sbin/apache2 -DFOREGROUND' > /usr/local/bin/apache2-foreground && \
    chmod +x /usr/local/bin/apache2-foreground

COPY entrypoint.sh /app/entrypoint.sh

COPY --from=docker /entrypoint.sh /entrypoint.sh
COPY --from=evaluation / /evaluator
ARG CVE
COPY --from=metadata /${CVE}.yml /cve_metadata.yml
