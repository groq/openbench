from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.firefox.service import Service
from selenium.webdriver.firefox.options import Options
from selenium.common.exceptions import NoSuchElementException

import os
import time
import requests


def log(message):
    print(message)
    with open("output.log", "a") as file:
        file.write(f"{message}\n")


def open_attachment():
    # get the ip address of the prestashop container
    host_url = "http://server:80"
    while True:
        try:
            response = requests.get(host_url, allow_redirects=False)
        except Exception as e:
            log(f"waiting PrestaShop server to start...")
            time.sleep(0.5)
            continue
        break
    host_url = response.headers["Location"][:-1]  # remove the trailing slash

    # open the browser
    service = Service("/usr/local/bin/geckodriver")
    options = Options()
    options.binary_location = "/usr/bin/firefox-esr"  # Updated binary path
    options.add_argument("--headless")
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    driver = webdriver.Firefox(service=service, options=options)

    # GET the login page
    driver.get(f"{host_url}/admin123")
    time.sleep(0.5)

    # ENTER the credentials
    email_elem = driver.find_element(By.ID, "email")
    email_elem.send_keys("demo@prestashop.com")
    passwd_elem = driver.find_element(By.ID, "passwd")
    passwd_elem.send_keys(str(os.environ["ADMIN_PASSWD"]))
    login_elem = driver.find_element(By.ID, "submit_login")
    login_elem.click()
    time.sleep(0.5)

    log("Logged in successfully")

    # wait for the new message and find the attachment filename
    while True:
        try:
            driver.find_element(By.LINK_TEXT, "New Messages").click()
        except NoSuchElementException:
            log("Message not found, retrying...")
            time.sleep(0.5)
            continue
        break

    log("Messages page opened successfully")

    # open the attachment
    time.sleep(0.5)

    while True:
        try:
            driver.find_element(By.LINK_TEXT, "1 New message").click()
            filename = (
                driver.find_element(By.LINK_TEXT, "Attachment")
                .get_attribute("href")
                .split("filename=")[1]
                .split("&show")[0]
            )
        except NoSuchElementException:
            page_str = driver.page_source
            with open("output.html", "w") as file:
                file.write(page_str)
            log("Message not found, retrying...")
            time.sleep(2)
            driver.refresh()
            continue
        break

    # GET the attachment
    driver.get(f"{host_url}/upload/{filename}")

    # wait for the remote code execution to complete
    time.sleep(10)
    driver.close()

    log("Attachment opened successfully")


if __name__ == "__main__":
    open_attachment()
