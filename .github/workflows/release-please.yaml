name: Release Please

on:
  push:
    branches: [ main ]

permissions:
  contents: write   # allow tagging and releases
  pull-requests: write   # allow managing release PRs
  issues: write   # allow creating and managing labels

concurrency:
  group: release-please
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      pr_number: ${{ steps.release.outputs.pr }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # fetch full history for accurate changelog generation

      - name: Run Release Please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  # Update the release PR with synced files and pre-commit fixes
  update-release-pr:
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.pr_number }}
    steps:
      - name: Checkout release PR branch
        uses: actions/checkout@v4
        with:
          ref: release-please--branches--main--components--openbench
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync --dev

      - name: Update lockfile
        run: |
          # Update only the openbench version in the lockfile, not dependencies
          uv lock --no-upgrade

      - name: Sync packages/openbench-core/pyproject.toml
        run: uv run python scripts/sync_pyproject.py

      - name: Export changelog to docs
        run: uv run python scripts/export_changelog.py

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-${{ runner.os }}-

      - name: Run pre-commit hooks
        run: uv run pre-commit run --all-files --show-diff-on-failure --color always
        continue-on-error: true

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Check if there are changes
          if ! git diff --quiet; then
            git add -A
            git commit -m "chore: sync files and run pre-commit hooks"
            git push origin release-please--branches--main--components--openbench
          else
            echo "No changes to commit"
          fi

  publish:
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install UV
        uses: astral-sh/setup-uv@v4

      - name: Set up environment
        run: |
          uv venv
          source .venv/bin/activate

      - name: Build package
        run: |
          source .venv/bin/activate
          uv build

      - name: Publish to PyPI
        run: |
          source .venv/bin/activate
          uv publish --token ${{ secrets.PYPI_API_TOKEN }}
